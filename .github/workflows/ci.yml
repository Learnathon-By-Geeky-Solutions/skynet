name: CI Pipeline with SonarCloud

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_ENV: test
  PORT: 4000
  MONGO_URI: mongodb://localhost:27017/mern_app_test
  VITE_API_URL: http://localhost:4000

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    # Backend setup
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run backend tests
      working-directory: ./backend
      timeout-minutes: 5
      env:
        JWT_SECRET: test-secret
        SESSION_SECRET: test-secret
        CSRF_SECRET: test-secret
      run: |
        npm test || echo "Tests failed - continuing workflow"
        # Generate test report if your test runner supports it
        # For Jest: add --json --outputFile=test-results.json in package.json test script

    # Frontend setup
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run frontend tests
      working-directory: ./frontend
      timeout-minutes: 5
      run: |
        npm test || echo "Tests failed - continuing workflow"
        # Generate test report if your test runner supports it

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    # Upload coverage artifacts
    - name: Archive coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: |
          backend/coverage/lcov.info
          frontend/coverage/lcov.info

  sonarcloud:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download coverage reports
      uses: actions/download-artifact@v4
      with:
        name: coverage-reports

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: .
        args: >
          -Dsonar.javascript.lcov.reportPaths=backend/coverage/lcov.info,frontend/coverage/lcov.info
          -Dsonar.coverage.exclusions=**/*.test.js,**/*.spec.js,**/__tests__/**,**/__mocks__/**
          -Dsonar.javascript.node.maxspace=8192